class Solution {
    public boolean isValid(String s) {
        //({[}])不对，因为open bracket[的closed bracket为}
        //({[]})就对了
        if(s.length() % 2 == 1){
            return false;
        }
        Stack<Character> stack = new Stack<>();
        Map<Character, Character> mapping = new HashMap<>();
        mapping.put('(', ')');
        mapping.put('{', '}');
        mapping.put('[', ']');
        for(int i = 0; i < s.length(); i++){
            if(s.charAt(i) == ')' || s.charAt(i) == '}' || s.charAt(i) == ']' ){
                if(stack.isEmpty() || mapping.get(stack.peek()) != s.charAt(i)){
                    return false;
                }else{
                    stack.pop();
                }
            }else{
                stack.push(s.charAt(i));
            }
            // if(stack.isEmpty()){
            //     if(s.charAt(i) == ')' || s.charAt(i) == '}' || s.charAt(i) == ']' ){
            //         return false;
            //     }else{
            //         stack.push(s.charAt(i));
            //     }
            // }else{
            //     if(s.charAt(i) == ')' || s.charAt(i) == '}' || s.charAt(i) == ']' ){
            //         if(mapping.get(stack.peek()) == s.charAt(i)){
            //             stack.pop();
            //         }else{
            //             return false;
            //         }
            //     }else{
            //        stack.push(s.charAt(i)); 
            //     }
            // }
        }
        if(stack.isEmpty()){
            return true;
        }
        return false;
    }
}
