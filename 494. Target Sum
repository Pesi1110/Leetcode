class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0;
        for(int i = 0; i < nums.length; i++){
            sum = sum + nums[i];
        }
        int n = nums.length;
        if(Math.abs(sum) < Math.abs(target)){
            return 0;
        }
        int col = 2 * sum;
        int[][] dp = new int[n + 1][col + 1];
        dp[0][sum] = 1;
        for(int i = 1; i <= n; i++){
            for(int j = 0; j <= col; j++){
                //偏移
                if(j - nums[i - 1] >= 0){
                    dp[i][j] = dp[i][j] + dp[i - 1][j - nums[i - 1]];
                }
                if(j + nums[i - 1] <= col){
                    dp[i][j] = dp[i][j] + dp[i - 1][j + nums[i - 1]];
                }
            }
        }
        return dp[n][target + sum];
    }
}
