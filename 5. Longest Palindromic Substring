class Solution {
    public String longestPalindrome(String s) {
        int maxLen = 0;
        int[] res = new int[2];
        for(int i = 0; i < s.length(); i++){
            //odd length
            int l = i;
            int r = i;
            while(l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)){
                if(r - l + 1 > maxLen){
                    maxLen = r - l + 1;
                    res[0] = l;
                    res[1] = r;
                }
                r++;
                l--;
            }
        }
        for(int i = 0; i < s.length(); i++){
            //even length
            int l = i;
            int r = i + 1;
            while(l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)){
                if(r - l + 1 > maxLen){
                    maxLen = r - l + 1;
                    res[0] = l;
                    res[1] = r;
                }
                r++;
                l--;
            }
        }
        return s.substring(res[0], res[1] + 1);
    }
}
