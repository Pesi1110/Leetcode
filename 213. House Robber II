class Solution {
    public int rob(int[] nums) {
        if(nums.length == 1){
            return nums[0];
        }
        int[] dp1 = new int[3];
        int[] dp2 = new int[3];
        dp1[0] = 0;
        dp1[1] = nums[0];
        dp2[0] = 0;
        dp2[1] = nums[1];
        for(int i = 2; i < nums.length; i++){
            dp1[i % 3] = Math.max(dp1[(i - 2) % 3] + nums[i - 1], dp1[(i - 1) % 3]);
            dp2[i % 3] = Math.max(dp2[(i - 2) % 3] + nums[i], dp2[(i - 1) % 3]);
        }
        int max1 = Math.max(dp1[0], Math.max(dp1[1], dp1[2]));
        int max2 = Math.max(dp2[0], Math.max(dp2[1], dp2[2]));
        return Math.max(max1, max2);
        
    }
}
