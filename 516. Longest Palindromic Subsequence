class Solution {
    public int longestPalindromeSubseq(String s) {
        StringBuilder reverse = new StringBuilder();
        StringBuilder s1 = new StringBuilder();
        s1.append(s);
        reverse = s1.reverse();
        String s2 = reverse.toString();
        int n = s.length();
        int m = s2.length();
        int[][] dp = new int[m + 1][n + 1];
        for(int i = m - 1; i >= 0; i--){
            for(int j = n - 1; j >= 0; j--){
                if(s.charAt(j) == s2.charAt(i)){
                    dp[i][j] = dp[i + 1][j + 1] + 1;
                }else{
                    dp[i][j] = Math.max(dp[i + 1][j], dp[i][j + 1]);
                }
            }
        }
        return dp[0][0];
    }
}
