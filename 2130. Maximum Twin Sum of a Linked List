/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int pairSum(ListNode head) {
        ListNode slow = head;
        ListNode fast = head;
        int count = 1;
        while(fast.next.next != null){
            count++;
            fast = fast.next.next;
            slow = slow.next;
        }
        ListNode prev = slow;
        ListNode curt = slow.next;
        while(curt != null){
            ListNode temp = curt.next;
            curt.next = prev;
            prev = curt;
            curt = temp;
        }
        ListNode tail = prev;
        ListNode tou = head;
        int max = Integer.MIN_VALUE;
        for(int i = 0; i < count; i++){
            max = Math.max(max, tou.val + tail.val);
            tou = tou.next;
            tail = tail.next;
        }
        return max;
    }
}
