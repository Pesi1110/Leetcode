class Solution {
    public boolean canPartition(int[] nums) {
        int target = 0;
        for(int i = 0; i < nums.length; i++){
            target = target + nums[i];
        }
        if(target % 2 == 1){
            return false;
        }
        target = target / 2;
        boolean[][] dp = new boolean[nums.length + 1][target + 1];
        dp[0][0] = true;
        for(int i = 1; i <= nums.length; i++){
            for(int j = 0; j <= target; j++){
                if(nums[i - 1] == j){
                    dp[i][j] = true;
                }else if(nums[i - 1] < j){
                    dp[i][j] = dp[i - 1][j] || dp[i - 1][j - nums[i - 1]];
                }else{
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        return dp[nums.length][target];
    }
}
