/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode insertIntoBST(TreeNode root, int val) {
        if(root == null){
            TreeNode newRoot = new TreeNode(val, null, null);
            return newRoot;
        }
        TreeNode curt = root;
        while(true){
            if(val > root.val) {
                if (root.right != null) {
                    root = root.right;
                } else {
                    TreeNode right = new TreeNode(val, null, null);
                    root.right = right;
                    break;
                }
            }
            if(val < root.val) {
                if (root.left != null) {
                    root = root.left;
                } else {
                    TreeNode left = new TreeNode(val, null, null);
                    root.left = left;
                    break;
                }
            }
        }
        return curt;
    }
}
