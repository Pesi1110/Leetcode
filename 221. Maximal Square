class Solution {
    public int maximalSquare(char[][] matrix) {
        int row = matrix.length;
        int col = matrix[0].length;
        int[][] dp = new int[row][col];
        int max = 0;
        //max最开始到底等于1还是等于0由第一行以及第一列决定
        for(int i = 0; i < col; i++){
            dp[0][i] = Character.getNumericValue(matrix[0][i]);
            max = Math.max(dp[0][i], max);
        }
        for(int i = 0; i < row; i++){
            dp[i][0] = Character.getNumericValue(matrix[i][0]);
            max = Math.max(dp[i][0], max);
        }
        
        for(int i = 1; i < row; i++){
            for(int j = 1; j < col; j++){
                if(matrix[i][j] == '0'){
                    dp[i][j] = 0;
                    continue;
                }
                dp[i][j] = Math.min(dp[i - 1][j], Math.min(dp[i - 1][j - 1], dp[i][j - 1])) + 1;
                max = Math.max(dp[i][j], max);
            }
        }
        // for(int i = 0; i < row; i++){
        //     for(int j = 0; j < col; j++){
        //         System.out.print(dp[i][j]);
        //     }
        //     System.out.print("\n");
        // }
        return max * max;
    }
}
